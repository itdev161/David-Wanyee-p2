[{"/Users/dngw/Repositories/David-Wanyee/client/src/index.tsx":"1","/Users/dngw/Repositories/David-Wanyee/client/src/serviceWorker.ts":"2","/Users/dngw/Repositories/David-Wanyee/client/src/App.tsx":"3","/Users/dngw/Repositories/David-Wanyee/client/src/components/Register/Register.js":"4","/Users/dngw/Repositories/David-Wanyee/client/src/components/Login/Login.js":"5","/Users/dngw/Repositories/David-Wanyee/client/src/components/PostList/PostList.js":"6","/Users/dngw/Repositories/David-Wanyee/client/src/components/PostList/PostListItem.js":"7","/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/Post.js":"8","/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/CreatePost.js":"9","/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/EditPost.js":"10"},{"size":503,"mtime":1602163897782,"results":"11","hashOfConfig":"12"},{"size":5295,"mtime":1602163897782,"results":"13","hashOfConfig":"12"},{"size":5200,"mtime":1608110930872,"results":"14","hashOfConfig":"12"},{"size":1804,"mtime":1608114026087,"results":"15","hashOfConfig":"12"},{"size":2024,"mtime":1608115342960,"results":"16","hashOfConfig":"12"},{"size":419,"mtime":1608111030172,"results":"17","hashOfConfig":"12"},{"size":1015,"mtime":1608114495383,"results":"18","hashOfConfig":"12"},{"size":214,"mtime":1608106435154,"results":"19","hashOfConfig":"12"},{"size":2247,"mtime":1608114692608,"results":"20","hashOfConfig":"12"},{"size":2366,"mtime":1608114718855,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mbaes",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},"/Users/dngw/Repositories/David-Wanyee/client/src/index.tsx",[],["49","50"],"/Users/dngw/Repositories/David-Wanyee/client/src/serviceWorker.ts",[],"/Users/dngw/Repositories/David-Wanyee/client/src/App.tsx",[],"/Users/dngw/Repositories/David-Wanyee/client/src/components/Register/Register.js",["51","52"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Register=({authenticateUser}) => {\r\n    let history = useHistory();\r\n    const [userData, setUserData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        passwordConfirm:''\r\n    });\r\n    const[errorData, setErrorData] = useState({errors:null});\r\n\r\n    const {name, email, password, passwordConfirm} = userData;\r\n    const {errors} = errorData;\r\n\r\n\r\n\r\nconst registerUser = async() => {\r\n    if(password!== passwordConfirm){\r\n        console.log('Passwords do not match');\r\n    }\r\n    else{\r\n        const newUser = {\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        }\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                }\r\n            }\r\n            const body = JSON.stringify(newUser);\r\n            const res = await axios.post('http://localhost:5000/api/users', body, config);\r\n\r\n            //store user data and redirect\r\n            localStorage.setItem('token', res.data.token);\r\n            history.pushState('/');\r\n        }catch(error){\r\n            //clear user data and set errors\r\n            localStorage.removeItem('token');\r\n\r\n            setErrorData({\r\n                ...errors,\r\n                errors: error.response.data.errors\r\n            })\r\n        }\r\n        authenticateUser();\r\n    \r\n    }\r\n\r\n  return(\r\n    <div>\r\n        <div>\r\n            <button onClick={() => registerUser()}>Register</button>\r\n        </div>\r\n        <div>\r\n            {errors && errors.map(error => <div key={error.msg}>{error.msg}</div>)}\r\n        </div>\r\n    </div>\r\n    \r\n  )  \r\n}\r\n\r\n}\r\nexport default Register;",["53","54"],"/Users/dngw/Repositories/David-Wanyee/client/src/components/Login/Login.js",["55","56","57"],"/Users/dngw/Repositories/David-Wanyee/client/src/components/PostList/PostList.js",[],"/Users/dngw/Repositories/David-Wanyee/client/src/components/PostList/PostListItem.js",["58","59"],"import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport slugify from 'slugify';\nimport EditPost from '../Post/EditPost';\nimport './styles.css';\n\nconst PostListItem = props => {\n    const {post, clickPost, deletePost, editPost} = props;\n    const history = useHistory();\n\n    const handleClickPost = post => {\n        const slug = slugify(post.title, {lower:true});\n\n        clickPost(post);\n        history.push('/posts/$(slug)');\n    };\n    const handledEditPost = post => {\n        editPost(post);\n        history.push('/edit-post/$(post_id)');\n    }\n\n    return(\n        <div>\n            <div className = \"postListItem\" onClick={() => handleClickPost(post)}>\n            <h2> {post.title}</h2>\n            <p>{post.body}</p>\n            </div>\n            <div>\n                <button onClick={() => deletePost (post)}>Delete</button>\n                <button onClick={() => handledEditPost (post)}>Edit</button>\n            </div>\n        </div>\n    );\n\n};\n\nexport default PostListItem;\n",["60","61"],"/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/Post.js",[],"/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/CreatePost.js",["62"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst CreatePost = ({onPostCreated}) =>{\r\n    let history = useHistory();\r\n    const [postData, setPostData]=useState({\r\n    title:'',\r\n    body:''\r\n    });\r\n    const{title, body} = postData;\r\n    const {token} =token;\r\n\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n\r\n        setPostData({\r\n            ...postData,\r\n            [name]:value\r\n        });\r\n    };\r\n\r\n    const create = async () =>{\r\n        if(!title || !body){\r\n            console.log('Title and body are required');\r\n        }else\r\n        {\r\n            const newPost = {\r\n                title: title,\r\n                body:body\r\n            };\r\n            try{\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type':'application/json',\r\n                        'x-auth-token': token\r\n                    }\r\n                };\r\n\r\n                //create the post\r\n                const body = JSON.stringify(newPost);\r\n                const res = await axios.post(\r\n                    'http://localhost:5000/api/posts',\r\n                    body,\r\n                    config\r\n                );\r\n                \r\n                //call the handler and redirect\r\n                onPostCreated(res.data);\r\n                history.push('/');\r\n            }\r\n            catch(error){\r\n                console.error('Error creating post: $(error.response.data)');\r\n             }\r\n            }\r\n        };\r\n\r\n    return(\r\n        <div className=\"form-container\">\r\n            <h2>Create New Post</h2>\r\n            <input\r\n                name = \"title\"\r\n                type = \"text\"\r\n                placeholder = \"Title\"\r\n                value = {title}\r\n                onChange = {e => onChange(e)}\r\n            />\r\n            <textarea\r\n                name = \"body\"\r\n                cols = \"30\"\r\n                rows = \"10\"\r\n                value = {body}\r\n                onChange = {e => onChange(e)}\r\n            ></textarea>\r\n            <button onClick = {() => create()}>Submit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePost;","/Users/dngw/Repositories/David-Wanyee/client/src/components/Post/EditPost.js",["63"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst EditPost = ({post, onPostUpdated}) => {\r\n    let history = useHistory();\r\n    const [postData, setPostData] = useState({\r\n        title:post.title,\r\n        body: post.body\r\n    });\r\n    const {title, body } = postData;\r\n    const {token} = token;\r\n\r\n    const onChange = e =>{\r\n        const {name, value} = e.target;\r\n\r\n        setPostData({\r\n            ...postData,\r\n            [name]:value\r\n        });\r\n    };\r\n\r\n    const update = async () =>{\r\n        if(!title || !body){\r\n            console.log('Title and body are required');\r\n        }\r\n        else{\r\n            const newPost = {\r\n                title:title,\r\n                body:body\r\n            };\r\n\r\n            try{\r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': token\r\n\r\n                    }\r\n                };\r\n\r\n                //create the post\r\n                const body = JSON.stringify(newPost);\r\n                const res = await axios.put(\r\n                    'http://localhost:5000/api/posts/$(post_id)',\r\n                    body,\r\n                    config\r\n                );\r\n\r\n                //call the handler and redirect\r\n                onPostUpdated(res.data);\r\n                history.push('/');\r\n                }\r\n                catch(error){\r\n                    console.error('Error creating post: $(error.response.data)');\r\n                }\r\n            }\r\n        };  \r\n\r\n        return(\r\n            <div className = \"form-container\">\r\n                <h2>Edit Post</h2>\r\n                <input\r\n                    name = \"title\"\r\n                    type = \"text\"\r\n                    placeholder = \"Title\"\r\n                    value = {title}\r\n                    onChange = {e => onChange(e)}\r\n                />\r\n                <textarea\r\n                    name = \"body\"\r\n                    cols=\"30\"\r\n                    rows = \"10\"\r\n                    value = {body}\r\n                    onChange = {e => onChange(e)}\r\n                ></textarea>\r\n                <button onClick = {() => update()}>Submit</button>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default EditPost;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":22,"nodeType":"70","messageId":"71","endLine":7,"endColumn":33},{"ruleId":"68","severity":1,"message":"72","line":58,"column":36,"nodeType":"70","messageId":"71","endLine":58,"endColumn":48},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"73","severity":2,"message":"74","line":6,"column":19,"nodeType":"70","endLine":6,"endColumn":29},{"ruleId":"73","severity":2,"message":"75","line":7,"column":37,"nodeType":"70","endLine":7,"endColumn":45},{"ruleId":"73","severity":2,"message":"75","line":12,"column":39,"nodeType":"70","endLine":12,"endColumn":47},{"ruleId":"68","severity":1,"message":"76","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":16},{"ruleId":"68","severity":1,"message":"77","line":12,"column":15,"nodeType":"70","messageId":"71","endLine":12,"endColumn":19},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":13,"column":20,"nodeType":"70","messageId":"82","endLine":13,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":13,"column":21,"nodeType":"70","messageId":"82","endLine":13,"endColumn":26},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'registerUser' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useHistory\" is called in function \"login\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"login\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'EditPost' is defined but never used.","'slug' is assigned a value but never used.",["83"],["84"],"no-use-before-define","'token' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation"]